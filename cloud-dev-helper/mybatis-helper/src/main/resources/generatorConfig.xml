<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
	<!-- 可以用于加载配置项或者配置文件,resource：配置资源加载地址,url：配置资源加载地质，使用URL的方式,两个属性只能选址一个 -->
	<properties resource="GeneratorConfig.properties" />
	<!-- 驱动路径，在MBG工作的时候，需要额外加载的依赖包,location属性指明加载jar/zip包的全路径 -->
	<classPathEntry location="${jdbc.path}" />
	<!--context:生成一组对象的环境 ,id:必选，上下文id，用于在生成错误时提示;defaultModelType:定义了MBG如何生成实体类;targetRuntime: 
		1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample； 2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample； -->
	<context id="gisquest-cloud" targetRuntime="MyBatis3" defaultModelType="flat">
		<property name="javaFileEncoding" value="UTF-8" />
		<!--plugin元素用来定义一个插件。插件用于扩展或修改通过MyBatis Generator (MBG)代码生成器生成的代码 -->
        <plugin type="com.gisquest.cloud.mybatis.plugins.mysql.PaginationPlugin" />
		<plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
		<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin" />
		<!--希望MBG生成的代码中可以包含注释信息，属性type需要实现org.mybatis.generator.api.CommentGenerator接口,有一个默认的构造方法 
			接收默认的特殊值DEFAULT，会使用默认的实现类org.mybatis.generator.internal.DefaultCommentGenerator -->
		<commentGenerator type="com.gisquest.cloud.mybatis.plugins.mysql.CommentPlugin">
			<!--suppressDate:阻止生成的注释包含时间戳，默认为false -->
			<property name="suppressDate" value="true" />
			<!--suppressAllComments:阻止生成注释，默认为false -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>

		<jdbcConnection driverClass="${jdbc.driverClassName}"
			connectionURL="${jdbc.url}" userId="${jdbc.username}" password="${jdbc.password}">
		</jdbcConnection>
		<!--用来指定JDBC类型和Java类型如何转换 -->
		<javaTypeResolver>
			<!--该属性可以控制是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal,默认值为false -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<javaModelGenerator targetPackage="com.gisquest.cloud.${serviceName}.model.domain"
			targetProject="${platformAbsolutePath}/platform-${serviceName}-service/platform-${serviceName}-model/src/main/java">
			<!--enableSubPackages:如果true，MBG会根据catalog和schema来生成子包。如果false就会直接用targetPackage属性。默认为false -->
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<sqlMapGenerator targetPackage="mapper"
			targetProject="${platformAbsolutePath}/platform-${serviceName}-service/platform-${serviceName}/src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<!--ANNOTATEDMAPPER:基于注解的Mapper接口，不会有对应的XML映射文件 MIXEDMAPPER:XML和注解的混合形式，(上面这种情况中的)SqlProvider注解方法会被XML替代。 
			XMLMAPPER:所有的方法都在XML中，接口调用依赖XML文件。 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.gisquest.cloud.${serviceName}.mapper"
			targetProject="${platformAbsolutePath}/platform-${serviceName}-service/platform-${serviceName}/src/main/java" >
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>
		<table schema="rules_engine" tableName="gz_gzxx">
			<property name="constructorBased" value="true" />
			<property name="ignoreQualifiersAtRuntime" value="true" />
			<generatedKey column="BSM" sqlStatement="SELECT LAST_INSERT_ID()" identity="true" />
		</table>


	</context>
</generatorConfiguration>
